---
before:
  hooks:
    - go mod tidy -compat=1.22
    - go mod vendor

release:
  prerelease: auto

builds:
  - id: headscale
    main: ./cmd/headscale
    mod_timestamp: "{{ .CommitTimestamp }}"
    env:
      - CGO_ENABLED=0
    targets:
      #      - darwin_amd64
      #      - darwin_arm64
      #      - freebsd_amd64
      #      - linux_386
      - linux_amd64
        #      - linux_arm64
        #      - linux_arm_5
        #      - linux_arm_6
        #      - linux_arm_7
    flags:
      - -mod=readonly
    ldflags:
      - -s -w -X github.com/0x7fffff92/headscale/cmd/headscale/cli.Version=v{{.Version}}
    tags:
      - ts2019

archives:
  - id: golang-cross
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    format: binary

source:
  enabled: true
  name_template: "{{ .ProjectName }}_{{ .Version }}"
  format: tar.gz
  files:
    - "vendor/"

kos:
  - id: dockerhub
    build: headscale
    base_image: gcr.io/distroless/base-debian12
    repository: libtorrent/headscale
    bare: true
    platforms:
      - linux/amd64
        #      - linux/386
        #      - linux/arm64
        #- linux/arm/v7
    tags:
      #      - "{{ if not .Prerelease }}latest{{ end }}"
        #      - "{{ if not .Prerelease }}{{ .Major }}.{{ .Minor }}.{{ .Patch }}{{ end }}"
        #      - "{{ if not .Prerelease }}{{ .Major }}.{{ .Minor }}{{ end }}"
        #      - "{{ if not .Prerelease }}{{ .Major }}{{ end }}"
      - "{{ if not .Prerelease }}v{{ .Major }}.{{ .Minor }}.{{ .Patch }}{{ end }}"
        #      - "{{ if not .Prerelease }}v{{ .Major }}.{{ .Minor }}{{ end }}"
        #      - "{{ if not .Prerelease }}v{{ .Major }}{{ end }}"
        #      - "{{ if not .Prerelease }}stable{{ else }}unstable{{ end }}"
      - "{{ .Tag }}"
      - '{{ trimprefix .Tag "v" }}'
      - "sha-{{ .ShortCommit }}"
